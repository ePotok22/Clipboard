# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: 'CI'

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  SOLUTION_NAME: FFF.Clipboard
  TEST_PROJECT_NAME: FFF.Clipboard.Tests
  
jobs:
  build-and-test:
    runs-on: windows-latest
    steps:  
    - name: Checkout 
      uses: actions/checkout@v4.1.1
      
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.3.1
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_NAME }}.sln
      
    - name: Build Release
      run: msbuild ${{ env.SOLUTION_NAME }}.sln /p:Configuration=Release /m
      
    - name: Install NUnit Console Runner
      run: nuget install NUnit.ConsoleRunner -Version 3.16.3 -OutputDirectory ./nunit
      
    - name: Run tests
      run: |
        $testDll = "${{ env.TEST_PROJECT_NAME }}/bin/Release/${{ env.TEST_PROJECT_NAME }}.dll"
        ./nunit/NUnit.ConsoleRunner.3.16.3/tools/nunit3-console.exe $testDll --result:TestResults.xml
      working-directory: .
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: NUnit Test Results
        path: TestResults.xml

  process-test-results:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Download Test Results
      uses: actions/download-artifact@v2
      with:
        name: NUnit Test Results
        path: ./report

    - name: Install xsltproc
      run: sudo apt-get install -y xsltproc

    - name: Transform NUnit3 to JUnit
      run: |
        xsltproc -o junit-test-results.xml https://raw.githubusercontent.com/nunit/nunit-transforms/master/nunit3-junit/nunit3-junit.xslt ./report/TestResults.xml

    - name: Publish JUnit Test Results
      uses: dorny/test-reporter@v1.8.0
      with:
        name: "JUnit Test Results"
        path: "junit-test-results.xml"
        reporter: jest-junit
