# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: 'CI'

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  SOLUTION_NAME: FFF.Clipboard
  TEST_PROJECT_NAME: FFF.Clipboard.Tests
  
jobs:
  build:
    runs-on: windows-latest
    steps:  
    - name: Checkout 
      uses: actions/checkout@v4.1.1
      
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.3.1
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_NAME }}.sln
      
    - name: Build Release
      run: msbuild ${{ env.SOLUTION_NAME }}.sln /p:Configuration=Release /m
      
    - name: Upload test artifact
      uses: actions/upload-artifact@v4.3.0
      if: success()     
      with:
        name: ${{ env.TEST_PROJECT_NAME }}
        path: ${{ env.TEST_PROJECT_NAME }}/bin/Release/
      
  tests:
    needs: build 
    runs-on: windows-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v4.1.1
      
    - name: Install NUnit.ConsoleRunner    
      run: nuget install NUnit.ConsoleRunner -Version 3.16.3
      
    - name: Download test artifact
      uses: actions/download-artifact@v4.1.1
      with:
        name: ${{ env.TEST_PROJECT_NAME }}
        path: artifact    
        
    - name: Delete test artifact
      uses: geekyeggo/delete-artifact@v4.1.0
      with:
         name: ${{ env.TEST_PROJECT_NAME }}
         token: ${{ secrets.GITHUB_TOKEN }}
         
    - name: Run tests
      run: ./NUnit.ConsoleRunner.3.16.3/tools/nunit3-console.exe ./artifact/${{ env.TEST_PROJECT_NAME }}.dll --result ./report/TestResults.xml
          
    - name: Upload test-report artifact
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: test-results
        path: ./report
        
  report:
    needs: tests 
    runs-on: ubuntu-latest
    steps:
    - name: Create reporter
      uses: dorny/test-reporter@v1.8.0
      with:
        artifact: test-results
        name: "test-report"
        path: '*.xml' 
        reporter: dotnet-trx

    - name: Delete test artifact
      uses: geekyeggo/delete-artifact@v4.1.0
      with:
         name: test-results
         token: ${{ secrets.GITHUB_TOKEN }}
