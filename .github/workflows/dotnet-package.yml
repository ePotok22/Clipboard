name: Build-Package-Publish

on:
  push:
    tags:
      - '*'
env:
  SOLUTION_NAME: FFF.Clipboard
  PROJECT_NAME: FFF.Clipboard

jobs:
  build-and-package:
    runs-on:  windows-2019
    steps:
    - name: Checkout 
      uses: actions/checkout@v4.1.1
    
    - name: Extract Version from Tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        $version = "${{ github.ref }}".Substring("${{ github.ref }}".LastIndexOf('/') + 1).Trim('v')
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: Update Assembly Version in AssemblyInfo.cs
      if: ${{ env.VERSION }} != ''
      run: |
        $assemblyInfoPath = "./$env:PROJECT_NAME/Properties/AssemblyInfo.cs"
        $version = "${{ env.VERSION }}"
        $content = Get-Content $assemblyInfoPath -Raw
        $content = $content -replace '\[assembly: AssemblyVersion\(".*"\)\]', "[assembly: AssemblyVersion(`"$version.0`")]"
        $content = $content -replace '\[assembly: AssemblyFileVersion\(".*"\)\]', "[assembly: AssemblyFileVersion(`"$version.0`")]"
        Set-Content $assemblyInfoPath -Value $content
      shell: pwsh

    # - name: Create Directory.Build.props with Version
    #   run: |
    #       $propsContent = @"
    #       <Project>
    #         <PropertyGroup>
    #           <Version>${{ env.VERSION }}</Version>
    #           <FileVersion>${{ env.VERSION }}</FileVersion>
    #           <AssemblyVersion>${{ env.VERSION }}</AssemblyVersion>
    #         </PropertyGroup>
    #       </Project>
    #       "@
    #       $propsContent | Out-File -FilePath "./Directory.Build.props"
    #   shell: pwsh  

    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.3.1
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_NAME }}.sln
      
    - name: Build Release
      run: msbuild /p:Configuration=Release /p:GeneratePackageOnBuild=true ${{ env.SOLUTION_NAME }}.sln

    - name: Pack NuGet Package
      run: nuget pack ${{ env.SOLUTION_NAME }}/${{ env.PROJECT_NAME }}.csproj -Properties Configuration=Release -Version ${{ env.VERSION }}
      shell: pwsh

    - name: Upload Test Results
      uses: actions/upload-artifact@v4.3.1
      with:
        name: Package
        path: ${{ env.PROJECT_NAME }}.${{ env.VERSION }}.nupkg
      
    # - name: Pack NuGet Package
    #   run: nuget pack ./${{ env.PROJECT_NAME }}.csproj -Properties Configuration=Release -Version ${{ steps.extract_version.outputs.tag_version }}

      # - name: Pack NuGet package
      # run: nuget pack FFF.Clipboard/FFF.Clipboard.csproj -Properties Configuration=Release -Version ${{ steps.get_version.outputs.VERSION }}
      # shell: pwsh
    # - name: Push NuGet Package
    #   run: nuget push *.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json
    #   if: success()
