name: 'Package'

on:
  push:
    tags:
      - 'v*.*.*'
env:
  SOLUTION_NAME: FFF.Clipboard
  PROJECT_NAME: FFF.Clipboard
  GITHUB_ACCOUNT: ePotok22

jobs:
  build-and-package:
    runs-on:  windows-2019
    steps:
    - name: Checkout 
      uses: actions/checkout@v4.1.1
    
    - name: Extract Version from Tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        $version = "${{ github.ref }}".Substring("${{ github.ref }}".LastIndexOf('/') + 1).Trim('v')
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: Update Assembly Version in AssemblyInfo.cs
      if: ${{ env.VERSION }} != ''
      run: |
        $assemblyInfoPath = "./$env:PROJECT_NAME/Properties/AssemblyInfo.cs"
        $version = "${{ env.VERSION }}"
        $content = Get-Content $assemblyInfoPath -Raw
        $content = $content -replace '\[assembly: AssemblyVersion\(".*"\)\]', "[assembly: AssemblyVersion(`"$version.0`")]"
        $content = $content -replace '\[assembly: AssemblyFileVersion\(".*"\)\]', "[assembly: AssemblyFileVersion(`"$version.0`")]"
        Set-Content $assemblyInfoPath -Value $content
      shell: pwsh

    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.3.1
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_NAME }}.sln
      
    - name: Build Release
      run: msbuild /p:Configuration=Release /p:GeneratePackageOnBuild=true ${{ env.SOLUTION_NAME }}.sln

    - name: Pack NuGet Package
      run: nuget pack ${{ env.SOLUTION_NAME }}/${{ env.PROJECT_NAME }}.csproj -Properties Configuration=Release -Version ${{ env.VERSION }}
      shell: pwsh

    # - name: Push Package Into NuGet
    #   run: nuget push *.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json 
    #   if: success()

    # - name: Push Package Into GitHub
    #   run: nuget push *.nupkg -ApiKey ${{ secrets.GITHUB_TOKEN }} -Source https://nuget.pkg.github.com/epotok22/index.json
    #   if: success()

    - name: Push Package Into GitHub
      run: |
        nuget sources Add -Name "GitHub" -Source https://nuget.pkg.github.com/${{ env.GITHUB_ACCOUNT }}/index.json -Username ${{ env.GITHUB_ACCOUNT }} -Password ${{ secrets.GH_PACKAGES_TOKEN }}
        nuget setapikey ${{ secrets.GH_PACKAGES_TOKEN }} -Source "GitHub"
        nuget push "*.nupkg" -Source "GitHub"
      shell: pwsh
